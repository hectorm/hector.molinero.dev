name: 'Main'

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']
  workflow_dispatch:

permissions: {}

jobs:

  build:
    name: 'Build'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
    env:
      NODE_VERSION: 'lts/*'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633'
      - name: 'Use Node.js ${{ env.NODE_VERSION }}'
        uses: 'actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8'
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'npm'
      - name: 'Install'
        run: 'npm ci'
      - name: 'Lint'
        run: 'npm run lint'
      - name: 'Build'
        run: 'npm run build'
      - name: 'Upload artifacts'
        if: "github.ref == 'refs/heads/publish'"
        uses: 'actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa'
        with:
          path: './dist/'
          retention-days: 1

  publish-github-pages:
    name: 'GitHub Pages publish'
    if: "github.ref == 'refs/heads/publish'"
    needs: ['build']
    runs-on: 'ubuntu-latest'
    permissions:
      id-token: 'write'
      pages: 'write'
    environment:
      name: 'github-pages'
      url: '${{ steps.deployment.outputs.page_url }}'
    steps:
      - name: 'Publish'
        id: 'deployment'
        uses: 'actions/deploy-pages@decdde0ac072f6dcbe43649d82d9c635fff5b4e4'

  publish-cloudflare-pages:
    name: 'Cloudflare Pages publish'
    if: "github.ref == 'refs/heads/publish'"
    needs: ['build']
    runs-on: 'ubuntu-latest'
    permissions:
      deployments: 'write'
    steps:
      - name: 'Download artifacts'
        uses: 'actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427'
        with:
          name: 'github-pages'
          path: './dist/'
      - name: 'Extract artifacts'
        run: 'tar -xvf ./dist/artifact.tar -C ./dist/ && rm -f ./dist/artifact.tar'
      - name: 'Publish'
        uses: 'cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca'
        with:
          accountId: '${{ secrets.CLOUDFLARE_ACCOUNT_ID }}'
          apiToken: '${{ secrets.CLOUDFLARE_API_TOKEN }}'
          gitHubToken: '${{ secrets.GITHUB_TOKEN }}'
          projectName: 'hectorm'
          directory: './dist/'
